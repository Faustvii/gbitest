{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/useMutationObserverRef.js","webpack:///./src/components/index.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/image.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_image__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_4__","IndexPage","a","createElement","title","keywords","style","maxWidth","margin","marginBottom","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","defaultConfig","attributes","childList","subtree","characterData","attributeOldValue","characterDataOldValue","defaultCallback","mutationsList","useMutationObserverRef","callback","onUnmount","config","observer","useMemo","window","MutationObserver","_useState","useState","reactElement","setReactNode","measuredRef","useCallback","targetNode","useEffect","node","findDOMNode","observe","leftOvers","takeRecords","disconnect","StyledSymetryWrapper","generateMedia","styled","div","withConfig","displayName","componentId","StyledBackgroundSection","className","desktop","_1916036857","_useMutationObserverR","forEach","mutation","target","HTMLImageElement","reactNode","console","log","currentSrc","complete","imageData","childImageSharp","fluid","react_default","StyledWrapper","gatsby_background_image_default","Tag","backgroundColor","fadeIn","id","role","aria-label","gatsby_image_default","ref","objectFit","objectPosition","width","height","Header","siteTitle","background","position","top","left","zIndex","padding","textAlign","gatsby_browser_entry","color","textDecoration","Footer","bottom","Date","getFullYear","href","Layout","Fragment","header","components","display","placeContent","placeSelf","marginTop","footer","_755544856","Image","gatsby__WEBPACK_IMPORTED_MODULE_2__","image","placeholderImage","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","borderRadius","_public_static_d_2079224242_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAgCeU,UAzBG,kBAChBN,EAAAO,EAAAC,cAACN,EAAA,EAAD,KACEF,EAAAO,EAAAC,cAACJ,EAAA,EAAD,CACEK,MAAM,+BACNC,SAAU,mCAEZV,EAAAO,EAAAC,cAAA,uBACAR,EAAAO,EAAAC,cAAA,2BACiBR,EAAAO,EAAAC,cAAA,uCADjB,eAGAR,EAAAO,EAAAC,cAAA,gDACsCR,EAAAO,EAAAC,cAAA,wCAEtCR,EAAAO,EAAAC,cAAA,qDAC2CR,EAAAO,EAAAC,cAAA,6BAE3CR,EAAAO,EAAAC,cAAA,OACEG,MAAO,CAAEC,SAAQ,QAAWC,OAAM,SAAYC,aAAY,YAE1Dd,EAAAO,EAAAC,cAACL,EAAA,EAAD,OAEFH,EAAAO,EAAAC,cAACH,EAAA,EAAD,CAAMU,GAAG,YAAT,oDC5BJnB,EAAAoB,EAAAlB,EAAA,sBAAAmB,IAAA,IAAAlB,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAmB,EAAAtB,EAAA,GAAAuB,EAAAvB,EAAAK,EAAAiB,GAAAE,EAAAxB,EAAA,IAAAyB,EAAAzB,EAAAK,EAAAmB,GAAAxB,EAAAoB,EAAAlB,EAAA,sBAAAuB,EAAAd,IAAAX,EAAA,SAYM0B,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBzB,EAAAO,EAAAC,cAACc,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvD5B,EAAAO,EAAAC,cAAA,uCA4BfS,EAAYe,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,wMCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEvB,IAAMf,cAAc0C,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXV,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,uwDCbf,SAASY,EAATX,GAA2D,IAA5CY,EAA4CZ,EAA5CY,YAAaC,EAA+Bb,EAA/Ba,KAAMC,EAAyBd,EAAzBc,KAAMhD,EAAmBkC,EAAnBlC,SAAUD,EAASmC,EAATnC,MACxCkD,EADiDC,EAAAhC,KACjD+B,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAxD,EAAAC,cAACwD,EAAAzD,EAAD,CACE0D,eAAgB,CACdR,QAEFhD,MAAOA,EACPyD,cAAa,QAAUP,EAAKG,aAAarD,MACzCiD,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS3D,GAEX,CACE4D,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS3D,GAEX,CACE0D,KAAI,sBACJC,QAASP,IAGVU,OACC7D,EAAS8D,OAAS,EACd,CACEL,KAAI,WACJC,QAAS1D,EAAS+D,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNhD,SAAU,GACV8C,YAAW,IAGbD,EAAIvB,UAAY,CACdwB,YAAavB,IAAUE,OACvBsB,KAAMxB,IAAUE,OAChBuB,KAAMzB,IAAU0C,QAAQ1C,IAAUC,QAClCxB,SAAUuB,IAAU0C,QAAQ1C,IAAUE,QACtC1B,MAAOwB,IAAUE,OAAOC,YAGXmB,0ZCnFTqB,EAAgB,CACpBC,YAAY,EACZC,WAAW,EACXC,SAAS,EACTC,eAAe,EACfC,mBAAmB,EACnBC,uBAAuB,GASnBC,EAAkB,SAAAC,GAAa,OAAIA,GAkD1BC,EAxCgB,SAC7BC,EACAC,EACAC,QACG,IAHHF,MAAWH,QAGR,IAFHI,MAAY,mBAET,IADHC,MAASZ,GAIT,IAAMa,EAAWC,kBACf,iBACE,oBAAOC,QAA0B,IAAIA,OAAOC,iBAAiBN,IAC/D,CAACA,IANAO,EASkCC,mBAAS,MAAvCC,EATJF,EAAA,GASkBG,EATlBH,EAAA,GAWGI,EAAcC,sBAClB,SAAAC,GACqB,OAAfA,GACFH,EAAaG,IAGjB,CAACJ,IAgBH,OAbAK,oBAAU,WACR,GAAIL,EAAc,CAChB,IAAMM,EAAOC,sBAAYP,GAEzB,OADAN,EAASc,QAAQF,EAAMb,GAChB,WAEL,IAAMgB,EAAYf,EAASgB,cAC3BhB,EAASiB,aACTnB,EAAUiB,MAGb,CAACT,IAEG,CAACE,EAAaF,ICyBjBY,GA7FQC,cA6FeC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,gBAAGJ,CAAH,8CAMpBK,EAA0BL,YA1FN,SAAAjE,GAA6B,IAA1BuE,EAA0BvE,EAA1BuE,UAAWpF,EAAea,EAAfb,SAC9BqF,EAD6CC,EAAAzF,KAC7CwF,QAD6CE,EA2BpBjC,EAbL,SAACD,EAAeK,GACrCL,GACLA,EAAcmC,QAAQ,SAAAC,GAChBA,EAASC,kBAAkBC,kBAAoBC,EACjDC,QAAQC,IAAIL,EAASC,OAAOK,WAAYH,GAExCC,QAAQC,IAAIL,GAEVA,EAASC,kBAAkBC,kBAC7BE,QAAQC,IAAR,WAAwBL,EAASC,OAAOM,aAM5C,SAAAvB,GAAS,OAAIoB,QAAQC,IAAIrB,KAFpBP,EA3B8CqB,EAAA,GA2BjCK,EA3BiCL,EAAA,GAgC/CU,EAAYZ,EAAQa,gBAAgBC,MAC1C,OACEC,EAAA5H,EAAAC,cAAC4H,EAAD,KACED,EAAA5H,EAAAC,cAACmG,EAAD,KACEwB,EAAA5H,EAAAC,cAAC6H,EAAA9H,EAAD,CACE+H,IAAI,UACJnB,UAAWA,EAGXe,MAAOF,EACPO,gBAAe,UAEf9H,MAAM,UAYN+H,OAAM,OAENC,GAAG,UACHC,KAAK,MACLC,aAAW,WAEV5G,IAGLoG,EAAA5H,EAAAC,cAACmG,EAAD,KACEwB,EAAA5H,EAAAC,cAACoI,EAAArI,EAAD,CACEsI,IAAK5C,EACLkB,UAAS,WACTsB,GAAG,WACHP,MAAOF,EACPO,gBAAgB,UAChBO,UAAU,QACVC,eAAe,UACfpI,MAAO,CACLqI,MAAK,QACLC,OAAM,cAcWlC,WAAA,CAAAC,YAAA,sCAAAC,YAAA,gBAAGJ,CAAH,kBAyBvBuB,EAAgBvB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,2DAYJK,IC7ITgC,EAAS,SAAAtG,GAAA,IAAGuG,EAAHvG,EAAGuG,UAAH,OACbhB,EAAA5H,EAAAC,cAAA,UACEG,MAAO,CACLyI,WAAU,UACVC,SAAQ,QACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRR,MAAK,UAGPb,EAAA5H,EAAAC,cAAA,OACEG,MAAO,CACLE,OAAM,SACN4I,QAAO,sBAGTtB,EAAA5H,EAAAC,cAAA,MAAIG,MAAO,CAAEE,OAAQ,EAAG6I,UAAS,WAC/BvB,EAAA5H,EAAAC,cAACmJ,EAAA,EAAD,CACE5I,GAAG,IACHJ,MAAO,CACLiJ,MAAK,QACLC,eAAc,SAGfV,OAOXD,EAAOlH,UAAY,CACjBmH,UAAWlH,IAAUE,QAGvB+G,EAAOxE,aAAe,CACpByE,UAAS,IAGID,QCzCTY,EAAS,kBACb3B,EAAA5H,EAAAC,cAAA,UACEG,MAAO,CACL0I,SAAU,QACVU,OAAQ,EACRR,KAAM,EACNH,WAAU,UACVI,OAAQ,EACRR,MAAK,QACLS,QAAO,OACPC,UAAS,SACTE,MAAK,UAVT,MAaK,IAAII,MAAOC,cAbhB,mBAeE9B,EAAA5H,EAAAC,cAAA,KAAG0J,KAAK,4BAAR,UAfF,MAiBE/B,EAAA5H,EAAAC,cAAA,KAAG0J,KAAK,sDAAR,6BAMJJ,EAAO9H,UAAY,CACjBmH,UAAWlH,IAAUE,QAGvB2H,EAAOpF,aAAe,CACpByE,UAAS,IAGIW,QCnBTK,EAAS,SAAAvH,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OACboG,EAAA5H,EAAAC,cAACmJ,EAAA,EAAD,CACE9H,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACVuG,EAAA5H,EAAAC,cAAA2H,EAAA5H,EAAA6J,SAAA,KACEjC,EAAA5H,EAAAC,cAAC6J,EAAD,CAAQlB,UAAWvH,EAAK+B,KAAKG,aAAarD,QAC1C0H,EAAA5H,EAAAC,cAAC8J,EAAD,KACEnC,EAAA5H,EAAAC,cAAA,OACEG,MAAO,CACLsI,OAAM,QACND,MAAK,OACLuB,QAAO,OACPC,aAAY,UAGdrC,EAAA5H,EAAAC,cAAA,OACEG,MAAO,CACL8J,UAAS,SACTf,UAAS,SACTE,MAAK,OACLX,OAAM,OACNrI,SAAU,IACV6I,QAAO,wBACPiB,UAAS,UAGXvC,EAAA5H,EAAAC,cAAA,YAAOuB,MAIboG,EAAA5H,EAAAC,cAACmK,EAAD,QArCN/I,KAAAgJ,KA2CFT,EAAOnI,UAAY,CACjBD,SAAUE,IAAUoE,KAAKjE,YAGZ+H,gGC3BAU,IAnBD,kBACZ9G,EAAAxD,EAAAC,cAACsK,EAAA,EAAD,CACEjJ,MAAK,aAWLC,OAAQ,SAAAF,GACN,IAAMmJ,EAAQnJ,EAAKoJ,iBAAiB/C,gBACpC,OAAOlE,EAAAxD,EAAAC,cAACyK,EAAA1K,EAAD,CAAK2H,MAAO6C,EAAM7C,MAAOvH,MAAO,CAAEuK,aAAY,WAdzDtJ,KAAAuJ","file":"component---src-pages-index-js-c87e336d5cd8f0825e96.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport Image from '../components/image'\nimport SEO from '../components/seo'\nimport { Link } from 'gatsby'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO\n      title=\"gatsby-background-image test\"\n      keywords={[`gatsby`, `application`, `react`]}\n    />\n    <h1>Hi people</h1>\n    <p>\n      Welcome to the <code>gatsby-background-image</code> test site.\n    </p>\n    <p>\n      Below, you see an image rendered by <code>gatsby-background-image</code>\n    </p>\n    <p>\n      To the right, the same image rendered by <code>gatsby-image</code>\n    </p>\n    <div\n      style={{ maxWidth: `300px`, margin: `0 auto`, marginBottom: `1.45rem` }}\n    >\n      <Image />\n    </div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { findDOMNode } from 'react-dom'\n\n/**\n * Default MutationObserver Config.\n *\n * @type {{\n *  subtree: boolean,\n *  attributes: boolean,\n *  childList: boolean,\n *  characterData: boolean,\n *  attributeOldValue: boolean,\n *  characterDataOldValue: boolean\n * }}\n */\nconst defaultConfig = {\n  attributes: true,\n  childList: true,\n  subtree: true,\n  characterData: true,\n  attributeOldValue: true,\n  characterDataOldValue: true,\n}\n\n/**\n * Dummy callback implementation.\n *\n * @param mutationsList\n * @return {*}\n */\nconst defaultCallback = mutationsList => mutationsList\n\n/**\n * Creates a callbackRef to spy on React element mutations.\n *\n * @param callback  MutationObserver callback with (mutationsList, observer).\n * @param onUnmount Function to be called on unmount.\n * @param config    MutationObserver configuration object.\n * @return {*[]}    Returns the callback reference measuredRef and React element.\n */\nconst useMutationObserverRef = (\n  callback = defaultCallback,\n  onUnmount = () => {},\n  config = defaultConfig\n) => {\n  // Create MutationObserver (if window exists) and memoize it,\n  // watch for callback changes.\n  const observer = useMemo(\n    () =>\n      typeof window !== `undefined` && new window.MutationObserver(callback),\n    [callback]\n  )\n  // Watch changes to react element to spy on.\n  const [reactElement, setReactNode] = useState(null)\n  // Set the React element to spy on as soon as measuredRef is called.\n  const measuredRef = useCallback(\n    targetNode => {\n      if (targetNode !== null) {\n        setReactNode(targetNode)\n      }\n    },\n    [reactElement]\n  )\n  // Now start observing the React element received through measuredRef.\n  useEffect(() => {\n    if (reactElement) {\n      const node = findDOMNode(reactElement)\n      observer.observe(node, config)\n      return () => {\n        // Catch remaining records.\n        const leftOvers = observer.takeRecords()\n        observer.disconnect()\n        onUnmount(leftOvers)\n      }\n    }\n  }, [reactElement])\n\n  return [measuredRef, reactElement]\n}\n\nexport default useMutationObserverRef\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport BackgroundImage from 'gatsby-background-image'\nimport { generateMedia } from 'styled-media-query'\nimport useMutationObserverRef from './useMutationObserverRef'\n\nconst media = generateMedia()\n\n/**\n * In this functional component a <BackgroundImage />  is compared to an <Img />.\n * @param className   string    className(s) from styled-components.\n * @param children    nodes     Child-components from index.js / page-2.js.\n * @return {*}\n * @constructor\n */\nconst BackgroundSection = ({ className, children }) => {\n  const { desktop } = useStaticQuery(\n    graphql`\n      query {\n        desktop: file(relativePath: { eq: \"seamless-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `\n  )\n  const logObservedCallback = (mutationsList, observer) => {\n    if (!mutationsList) return\n    mutationsList.forEach(mutation => {\n      if (mutation.target instanceof HTMLImageElement && reactNode) {\n        console.log(mutation.target.currentSrc, reactNode)\n      } else {\n        console.log(mutation)\n      }\n      if (mutation.target instanceof HTMLImageElement) {\n        console.log(`complete`, mutation.target.complete)\n      }\n    })\n  }\n  const [measuredRef, reactNode] = useMutationObserverRef(\n    logObservedCallback,\n    leftOvers => console.log(leftOvers)\n  )\n  // Extract imageData.\n  const imageData = desktop.childImageSharp.fluid\n  return (\n    <StyledWrapper>\n      <StyledSymetryWrapper>\n        <BackgroundImage\n          Tag=\"section\"\n          className={className}\n          // To style via external CSS see layout.css last examples:\n          // className=\"test\"\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n          // Title get's passed to both container and noscriptImg.\n          title=\"gbitest\"\n          // You are able to set a classId and style by wrapper (see below or\n          // https://github.com/timhagn/gatsby-background-image/#styling--passed-through-styles):\n          // classId=\"gbi\"\n          // style={{\n          //   // Defaults are overwrite-able by setting one of the following:\n          //   // backgroundSize: '',\n          //   // backgroundPosition: '',\n          //   // backgroundRepeat: '',\n          // }}\n          // To \"force\" the classic fading in of every image (especially on\n          // imageData change for fluid / fixed) by setting `soft` on `fadeIn`:\n          fadeIn={`soft`}\n          // You can \"safely\" (look them up beforehand ; ) add other props:\n          id=\"gbitest\"\n          role=\"img\"\n          aria-label=\"gbitest\"\n        >\n          {children}\n        </BackgroundImage>\n      </StyledSymetryWrapper>\n      <StyledSymetryWrapper>\n        <Img\n          ref={measuredRef}\n          className={`main-img`}\n          id=\"main-img\"\n          fluid={imageData}\n          backgroundColor=\"#040e18\"\n          objectFit=\"cover\"\n          objectPosition=\"50% 50%\"\n          style={{\n            width: `100vw`,\n            height: `auto`,\n          }}\n        />\n      </StyledSymetryWrapper>\n    </StyledWrapper>\n  )\n}\n\nconst StyledSymetryWrapper = styled.div`\n  width: 50vw;\n  height: 100%;\n  overflow: hidden;\n`\n\nconst StyledBackgroundSection = styled(BackgroundSection)`\n  width: 100vw;\n  \n  // These three crucial styles (if existing) are directly parsed and added to \n  // the pseudo-elements without further ado (except when overwritten).\n  //background-repeat: repeat-y;\n  //background-position: left center;\n  //background-size: cover;\n  \n  // With media-queries you have to overwrite the default options (see style={{}} above).\n  // ${media.lessThan('large')`\n  //   background-size: cover;\n  //   &:after, &:before {\n  //     background-size: contain;\n  //   }\n  // `}\n  \n  // For pseudo-elements you have to overwrite the default options (see style={{}} above).\n  // See: https://github.com/timhagn/gatsby-background-image/#styling--passed-through-styles \n  //&:after, &:before {\n  //   background-clip: content-box;\n  //   background-size: contain;\n  //}\n`\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  overflow: hidden;\n\n  // This is an example how to target the pseudo-elements via classId (deprecated):\n  //.gatsby-background-image-gbi:after, .gatsby-background-image-gbi:before {\n  //  background-clip: content-box;\n  //}\n`\n\nexport default StyledBackgroundSection\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#00446f`,\n      position: `fixed`,\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      width: `100vw`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0, textAlign: `center` }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Footer = () => (\n  <footer\n    style={{\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      background: `#00446f`,\n      zIndex: 1,\n      width: `100vw`,\n      padding: `1rem`,\n      textAlign: `center`,\n      color: `white`,\n    }}\n  >\n    © {new Date().getFullYear()}, Built with\n    {` `}\n    <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    {` & `}\n    <a href=\"https://github.com/timhagn/gatsby-background-image\">\n      gatsby-background-image\n    </a>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport './layout.css'\nimport StyledBackgroundSection from './index'\nimport Header from './header'\nimport Footer from './footer'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <StyledBackgroundSection>\n          <div\n            style={{\n              height: `100vh`,\n              width: `100%`,\n              display: `flex`,\n              placeContent: `start`,\n            }}\n          >\n            <div\n              style={{\n                placeSelf: `center`,\n                textAlign: `center`,\n                color: `#ccc`,\n                height: `50vh`,\n                maxWidth: 960,\n                padding: `0px 1.0875rem 1.45rem`,\n                marginTop: `-5rem`,\n              }}\n            >\n              <main>{children}</main>\n            </div>\n          </div>\n        </StyledBackgroundSection>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/**\n * This component is built using `gatsby-background-image` to automatically\n * serve optimized background-images with lazy loading and reduced file sizes\n * as well as a `gatsby-image` for comparison.\n * The image is loaded using a `StaticQuery`, which allows us to load the image\n * from directly within this component, rather than having to pass\n * the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-background-image`: https://github.com/timhagn/gatsby-background-image\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid_withWebp_noBase64\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.placeholderImage.childImageSharp\n      return <Img fluid={image.fluid} style={{ borderRadius: `15px` }} />\n    }}\n  />\n)\nexport default Image\n"],"sourceRoot":""}